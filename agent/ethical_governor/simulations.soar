#######################################################
## op_go-to1

# add the location as the new current-location
#   and mark it visible
sp {action*apply*go-to-location*do*action-model*add*new*location
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <o>
              ^world.robot <robot>)
   (<o> ^name op_go-to-waypoint1
        ^arg1.id <new-loc>)
-->
   (<robot> ^current-location <new-loc>)
}

# remove the old current-location
#   and mark it not visible
sp {action*apply*go-to-location*do*action-model*remove*old*location
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <o>
              ^world.robot <robot>)
   (<o> ^name op_go-to-waypoint1
        ^arg1.id <new-loc>)
   (<robot> ^current-location { <old-loc> <> <new-loc> })
-->
   (<robot> ^current-location <old-loc> -)
}

sp {action*apply*go-to-location*do*action-model*add*new*location
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <o>
              ^world.robot <robot>)
   (<o> ^name op_go-to-next-waypoint1
        ^arg1.id <new-loc>)
-->
   (<robot> ^current-location <new-loc>)
}

# remove the old current-location
#   and mark it not visible
sp {action*apply*go-to-location*do*action-model*remove*old*location
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <o>
              ^world.robot <robot>)
   (<o> ^name op_go-to-next-waypoint1
        ^arg1.id <new-loc>)
   (<robot> ^current-location { <old-loc> <> <new-loc> })
-->
   (<robot> ^current-location <old-loc> -)
}
#
## Any objects that are in the new location are marked as visible
#sp {action*apply*go-to-location*do*action-model*mark*new*object*visible
#   (state <s> ^problem-space.name action
#              ^problem-space.execution-type internal
#              ^operator <o>
#              ^world <world>)
#   (<o> ^name op_go-to1
#        ^arg2.2 <new-loc>)
#   (<world> ^predicates.predicate <in-pred>
#            ^objects.object <obj>)
#   (<in-pred> ^handle in1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 <new-loc>)
#   (<obj> ^predicates <preds>)
#-->
#   (<preds> ^visible false -
#            ^visible true)
#}
#
## Any objects that are in the old location are marked as not visible
#sp {action*apply*go-to-location*do*action-model*mark*old*objects*not*visible
#   (state <s> ^problem-space.name action
#              ^problem-space.execution-type internal
#              ^operator <o>
#              ^world <world>)
#   (<o> ^name op_go-to1
#        ^arg2.2 <new-loc>)
#   (<world> ^predicates.predicate <in-pred>
#            ^objects.object <obj>)
#   (<in-pred> ^handle in1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 { <old-loc> <> <new-loc> })
#   (<obj> ^predicates <preds>)
#-->
#   (<preds> ^visible true -
#            ^visible false)
#}


