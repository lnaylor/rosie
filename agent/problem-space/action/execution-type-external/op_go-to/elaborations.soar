# Attend to perception during drive commands
sp {op_go-to1*elaborate*problem-space*attend-to-all-perception*during*commands
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^current-action.{ << drive-command drive-forward-command >> } <cmd>
              ^problem-space.perception <p>)
-->
   (<p> ^attend-to-all-perception yes)
}

sp {op_go-to1*elaborate*executing-command
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^current-action.{ << drive-command drive-forward-command >> } <cmd>)
   (<cmd> ^status << sent executing >>)
-->
   (<s> ^executing-command true)
}

sp {op_go-to1*elaborate*propose-wait
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^executing-command true)
-->
   (<s> ^propose-wait true)
}

#### GOAL SATISFACTION ####
sp {op_go-to1*elaborate*desired*satisfied*at*waypoint
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^world.robot.current-waypoint <wp>
              ^desired-waypoint <wp>)
-->
   (<s> ^desired.satisfied true)
}

sp {op_go-to1*elaborate*desired*satisfied*finished-drive
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^current-action.{ << drive-command drive-forward-command >> }.status success)
-->
   (<s> ^desired.satisfied true)
}

# If arg2 is an object, then elaborate it as target-object
sp {op_go-to*elaborate*target-object
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^action-operator.arg2 <arg2>)
   (<arg2> ^arg-type predicate
           ^2 <obj>)
   (<obj> -^predicates.spatial-shape end1
          -^linked-to
          ^predicates.category object)
-->
  (<s> ^target-object <obj>)
}

# If arg2 is a location, then elaborate it as desired-location
sp {op_go-to*elaborate*desired-location
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^action-operator.arg2 <arg2>)
   (<arg2> ^arg-type predicate
           ^2 <loc>)
   (<loc> -^predicates.spatial-shape end1
          -^linked-to
          ^predicates.category location)
-->
   (<s> ^desired-location <loc>)
}

sp {op_go-to*elaborate*desired-location*linked-to
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^action-operator.arg2 <arg2>)
   (<arg2> ^arg-type predicate
           ^{2}.linked-to <loc>)
   (<loc> -^predicates.spatial-shape end1
           ^predicates.category location)
-->
   (<s> ^desired-location <loc>)
}

sp {op_go-to*elaborate*desired-waypoint*arg1
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^action-operator.arg1 <arg1>)
   (<arg1> ^arg-type waypoint
           ^id <wp>)
-->
   (<s> ^desired-waypoint <wp>)
}

# If arg2 is a waypoint, then elaborate it as desired-waypoint
sp {op_go-to*elaborate*desired-waypoint*arg2*waypoint
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^action-operator.arg2 <arg2>
              ^top-state.maps.map.waypoint <wp>)
   (<arg2> ^arg-type predicate
           ^2 <wp>)
-->
   (<s> ^desired-waypoint <wp>)
}

sp {op_go-to*elaborate*desired-waypoint
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
              ^desired-location.waypoint <wp-handle>
              ^top-state.maps.map.waypoint <wp>)
   (<wp> ^handle <wp-handle>)
-->
   (<s> ^desired-waypoint <wp>)
}
