# If we are going without a destination (e.g. Go until you see a door)
# or going to the end of the hall (e.g. Go to the end of the hall)
# Then we send a drive-forward command, which will just drive forward

sp {op_go-to1*propose*send-drive-forward-command
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
             -^action-operator.arg2
             -^current-action.drive-forward-command)
-->
   (<s> ^operator <o> + >)
   (<o> ^name send-drive-forward-command)
}

sp {op_go-to1*propose*send-drive-forward-command*end
   (state <s> ^name op_go-to1
              ^problem-space.execution-type external
             ^action-operator.arg2.{2}.predicates.spatial-shape end1
             -^current-action.drive-forward-command)
-->
   (<s> ^operator <o> + >)
   (<o> ^name send-drive-forward-command)
}

sp {op_go-to1*apply*send-drive-forward-command*no*until
   (state <s> ^name op_go-to1
              ^operator.name send-drive-forward-command
              ^current-action <a>
              ^top-state.io.output-link <out>)
#             -^until-clause)
-->
   (<out> ^do-control-law <law>)
   (<law> ^name drive-forward
          ^termination-condition.name stabilized)
   (<a> ^drive-forward-command <law>)
}

#sp {op_go-to1*apply*send-drive-forward-command*until
#   (state <s> ^name op_go-to1
#              ^operator.name send-drive-forward-command
#              ^current-action <a>
#              ^top-state.io.output-link <out>
#              ^until-clause <until>)
#-->
#   (<out> ^do-control-law <law>)
#   (<law> ^name drive-forward
#          ^termination-condition <until>)
#   (<a> ^drive-forward-command <law>)
#}
